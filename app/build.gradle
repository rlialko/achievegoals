apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: "androidx.navigation.safeargs.kotlin"

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.2"
    defaultConfig {
        applicationId "com.ruslanlialko.achievegoals"
        minSdkVersion 21
        targetSdkVersion 29
        versionCode 2
        versionName "1.1"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = ["room.schemaLocation": "$projectDir/schemas".toString()]
            }
        }
    }

    signingConfigs {
        debug {
            storeFile file('keystore/debug.keystore')
            keyAlias 'androiddebugkey'
            storePassword 'android'
            keyPassword 'android'
        }

        release {
            def propsFile = file('keystore.properties')
            if (propsFile.exists()) {
                def props = new Properties()
                props.load(new FileInputStream(propsFile))
                storeFile file('keystore/release.keystore')
                keyAlias = props['keyAlias']
                storePassword = props['storePassword']
                keyPassword = props['keyPassword']
            }
        }
    }

    buildTypes {
        debug {
            minifyEnabled false
            buildConfigField "String", "API_URL", "\"https://thebigachallenge.appspot.com/_ah/api/myApi/v1/\""
            debuggable true
            applicationVariants.all { variant ->
                variant.outputs.all { output ->
                    outputFileName =  outputFileName.replace("app-", "Achieve-Goals-" + versionName + "-")
                }
            }
        }

        release {
            minifyEnabled false
            buildConfigField "String", "API_URL", "\"https://thebigachallenge.appspot.com/_ah/api/myApi/v1/\""
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    dataBinding {
        enabled = true
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.core:core-ktx:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.2.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    //
    ext.cardVersion = '1.0.0'
    implementation "androidx.cardview:cardview:$cardVersion"
    // Koin for Kotlin apps
    ext.koin_version = '2.0.1'
    implementation "org.koin:koin-android:$koin_version",
            "org.koin:koin-androidx-viewmodel:$koin_version"
    // Room components
    ext.room_version = '2.2.3'
    implementation "androidx.room:room-runtime:$room_version",
            "androidx.room:room-ktx:$room_version"
    ext.room_compiler_version = '2.2.1'
    kapt "androidx.room:room-compiler:$room_compiler_version"
    // LiveData
    ext.livedata_version = '2.2.0'
    implementation "androidx.lifecycle:lifecycle-livedata:$livedata_version",
            "androidx.lifecycle:lifecycle-livedata-core:$livedata_version"
    // Navigation
    ext.navigation_version = '2.2.0'
    implementation "androidx.navigation:navigation-fragment-ktx:$navigation_version",
            "androidx.navigation:navigation-ui-ktx:$navigation_version"
    // Retrofit
    ext.retrofit_version = '2.6.0'
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version",
            "com.squareup.retrofit2:converter-gson:$retrofit_version"
    // OkHttp
    ext.logging_interceptor_version = '3.12.1'
    implementation "com.squareup.okhttp3:logging-interceptor:$logging_interceptor_version"
    //
    ext.coroutine_adapter_version = '0.9.2'
    implementation "com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:$coroutine_adapter_version"
    // Coroutines
    ext.coroutines_version = '1.3.0'
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines_version",
            "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines_version"
    // Glide
    ext.glide_version = '4.8.0'
    implementation "com.github.bumptech.glide:glide:$glide_version",
            "com.github.bumptech.glide:annotations:$glide_version",
            "com.github.bumptech.glide:okhttp3-integration:$glide_version"
    kapt "com.github.bumptech.glide:compiler:$glide_version"

}
